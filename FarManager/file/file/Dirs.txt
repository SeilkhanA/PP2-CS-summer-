using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DirsFiles
{
    class Program
    {
        static void f1()
        {
            FileInfo f = new FileInfo(@"C:\test\file1.txt");

            Console.WriteLine(f.Name);
            Console.WriteLine(f.FullName);

            DirectoryInfo dir = new DirectoryInfo(@"C:\test");

            Console.WriteLine(dir.FullName);
        }


        static void f2()
        {
            DirectoryInfo dir = new DirectoryInfo(@"C:\test");
            FileInfo[] files = dir.GetFiles();

            for (int i = 0; i < files.Length; i++)
                Console.WriteLine(files[i].Name);   
        }

        static void f3()
        {
            DirectoryInfo dir = new DirectoryInfo(@"C:\test");
            DirectoryInfo[] dirs = dir.GetDirectories();

            for (int i = 0; i < dirs.Length; i++)
                Console.WriteLine(dirs[i].Name);
        }

        static void f4()
        {
            DirectoryInfo dir = new DirectoryInfo(@"C:\test");
            FileInfo[] files = dir.GetFiles();
            DirectoryInfo[] dirs = dir.GetDirectories();

            foreach (DirectoryInfo d in dirs)
                Console.WriteLine(d.Name);

            foreach (FileInfo f in files)
                Console.WriteLine(f.Name);
        }


        static void f5(string path, int depth = 0)
        {
            DirectoryInfo dir = new DirectoryInfo(path);
            FileInfo[] files = dir.GetFiles();
            DirectoryInfo[] dirs = dir.GetDirectories();

            foreach (DirectoryInfo d in dirs)
            {
                for (int i = 0; i < depth; i++) Console.Write(" ");
                Console.WriteLine(d.Name);
                f5(d.FullName, depth + 5);
            }

            foreach (FileInfo f in files) {
                for (int i = 0; i < depth; i++) Console.Write(" ");
                Console.WriteLine(f.Name);
            }

            
        }

        static void Main(string[] args)
        {
            f5(@"C:\test");

            Console.ReadKey();
        }
    }
}


//FILE READ AND WRITE


using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FileReadWrite
{
    class Program
    {


        static void f1()
        {
            FileStream fs = new FileStream(@"C:\test\file1.txt", FileMode.Open, FileAccess.Read);
            StreamReader sr = new StreamReader(fs);

            Console.WriteLine(sr.ReadLine());

            sr.Close();
            fs.Close();
        }
        static void f2()
        {
            FileStream fs = new FileStream(@"C:\test\file1.txt", FileMode.Open, FileAccess.Write);
            StreamWriter sw = new StreamWriter(fs);

            sw.WriteLine("asd");

            sw.Close();
            fs.Close();
        }


        static void Main(string[] args)
        {
            f2();


            Console.ReadKey();

        }
    }
}




//COMPLEX CLASS

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ComplexClass
{
    class Complex
    {
        public int x, y;

        public Complex() { }

        public Complex(int _x, int _y)
        {
            x = _x;
            y = _y;
        }

        public static Complex operator +(Complex c1, Complex c2)
        {
            Complex n = new Complex();
            n.x = c1.x + c2.x;
            n.y = c1.y + c2.y;
            return n;
        }

        public override string ToString()
        {
            return x + " " + y;
        }


    }
}


//STACK EXAMPLE

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ComplexClass
{
    class Program
    {
        static void Main(string[] args)
        {
            Complex c1 = new Complex(2, 3);
            Complex c2 = new Complex(7, 9);

            Complex result = c1 + c2;

            Console.WriteLine(result);

            

            Console.ReadKey();
        }
    }
}


using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MyStackExample
{
    class Program
    {

        static void showStackTree(string path)
        {
            Stack<DirectoryInfo> myS = new Stack<DirectoryInfo>();
            DirectoryInfo dir = new DirectoryInfo(path);
            myS.Push(dir);

            while(myS.Count > 0)
            {
                DirectoryInfo cur = myS.Pop();
                foreach(DirectoryInfo d in cur.GetDirectories())
                {
                    Console.WriteLine(d.Name);
                    myS.Push(d);
                }

                foreach(FileInfo f in cur.GetFiles())
                {
                    Console.WriteLine(f.Name);
                } 
            }

        }


        static void Main(string[] args)
        {
            showStackTree(@"C:\test");
            
            /*
            Stack<int> s = new Stack<int>();
            s.Push(2);
            s.Push(3);
            s.Push(10);
            Console.WriteLine(s.Count);
            Console.WriteLine(s.Pop());
            Console.WriteLine(s.Count);
            */

            Console.ReadKey();
        }
    }
}

